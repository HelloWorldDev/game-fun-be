{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample API for demonstration purposes.",
        "title": "My API",
        "contact": {},
        "version": "1.0"
    },
    "host": "8.218.102.112:4880",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/user/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of the currently authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/chains/:chainType/gas_fee": {
            "get": {
                "description": "Get the current gas fee for Solana blockchain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "on-chain-data"
                ],
                "summary": "Get Solana gas fee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of the token (e.g., sol, eth)",
                        "name": "chainType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/httpRespone.GasFee"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/chains/:chainType/sol_price": {
            "get": {
                "description": "Get the current real-time price for Solana",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "on-chain-data"
                ],
                "summary": "Get Solana real-time price",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of the token (e.g., sol, eth)",
                        "name": "chainType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "number"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/pool_info/{address}": {
            "get": {
                "description": "Retrieve pool information for a specific token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pool"
                ],
                "summary": "Get pool info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address of the token",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PoolResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/rank/sol/new_pairs": {
            "get": {
                "description": "Get the dump rank for SOL tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pump"
                ],
                "summary": "Get SOL dump rank",
                "parameters": [
                    {
                        "enum": [
                            "1m",
                            "5m",
                            "1h",
                            "6h",
                            "24h"
                        ],
                        "type": "string",
                        "description": "Time range",
                        "name": "time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Limit of results",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "progress",
                            "created_timestamp",
                            "price_change_percent5m",
                            "price_change_percent1h",
                            "liquidity",
                            "creator_balance",
                            "holder_count",
                            "swaps_1h",
                            "volume_1h",
                            "reply_count",
                            "usd_market_cap",
                            "last_trade_timestamp",
                            "koth_duration",
                            "time_since_koth",
                            "market_cap_1m",
                            "market_cap_5m"
                        ],
                        "type": "string",
                        "description": "Order by field",
                        "name": "orderby",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort direction",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter for completed projects",
                        "name": "completed",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Additional filters",
                        "name": "filters[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Minimum creation time",
                        "name": "min_created",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Maximum creation time",
                        "name": "max_created",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum holder count",
                        "name": "min_holder_count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum holder count",
                        "name": "max_holder_count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum swaps",
                        "name": "min_swaps",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum swaps",
                        "name": "max_swaps",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum market cap",
                        "name": "min_marketcap",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum market cap",
                        "name": "max_marketcap",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum volume",
                        "name": "min_volume",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum volume",
                        "name": "max_volume",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum reply count",
                        "name": "min_reply",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time to reach 1/2 crown",
                        "name": "koth_duration",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time to reach 2/2 rocket",
                        "name": "time_since_koth",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum initial liquidity",
                        "name": "min_init_liquidity",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum initial liquidity",
                        "name": "max_init_liquidity",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum quote USD",
                        "name": "min_quote_usd",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum quote USD",
                        "name": "max_quote_usd",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum liquidity",
                        "name": "min_liquidity",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum liquidity",
                        "name": "max_liquidity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/rank/sol/pump": {
            "get": {
                "description": "Get the pump rank for SOL tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pump"
                ],
                "summary": "Get SOL pump rank",
                "parameters": [
                    {
                        "enum": [
                            "1m",
                            "5m",
                            "1h",
                            "6h",
                            "24h"
                        ],
                        "type": "string",
                        "description": "Time range",
                        "name": "time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Limit of results",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "progress",
                            "created_timestamp",
                            "creator_balance",
                            "holder_count",
                            "swaps_1h",
                            "volume_1h",
                            "reply_count",
                            "usd_market_cap",
                            "last_trade_timestamp",
                            "koth_duration",
                            "time_since_koth",
                            "market_cap_1m",
                            "market_cap_5m"
                        ],
                        "type": "string",
                        "description": "Order by field",
                        "name": "orderby",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort direction",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter for new creations",
                        "name": "new_creation",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter for completing projects",
                        "name": "completing",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter for projects about to pump",
                        "name": "pump",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter for soaring projects",
                        "name": "soaring",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Additional filters",
                        "name": "filters[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Minimum creation time",
                        "name": "min_created",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Maximum creation time",
                        "name": "max_created",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum holder count",
                        "name": "min_holder_count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum holder count",
                        "name": "max_holder_count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum swaps",
                        "name": "min_swaps",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum swaps",
                        "name": "max_swaps",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum market cap",
                        "name": "min_marketcap",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum market cap",
                        "name": "max_marketcap",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum volume",
                        "name": "min_volume",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum volume",
                        "name": "max_volume",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum reply count",
                        "name": "min_reply",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time to reach 1/2 crown",
                        "name": "koth_duration",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time to reach 2/2 rocket",
                        "name": "time_since_koth",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/token_balance/{chainType}/{owner}/{token}": {
            "get": {
                "description": "Get the balance of a token for a given owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "on-chain-data"
                ],
                "summary": "Get token balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of the token (e.g., sol, eth)",
                        "name": "chainType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Owner of the token",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token address",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.TokenBalance"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/token_info/{chainType}/{tokenAddress}": {
            "get": {
                "description": "Retrieve detailed information for a specific token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Get token information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of the token (e.g., sol, eth)",
                        "name": "chainType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address of the token",
                        "name": "tokenAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detailed token information",
                        "schema": {
                            "$ref": "#/definitions/response.TokenInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.TokenInfoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/token_launchpad_info/{chainType}/{tokenAddress}": {
            "get": {
                "description": "Retrieve detailed information for a specific token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Get token launchpad info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of the token (e.g., sol, eth)",
                        "name": "chainType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address of the token",
                        "name": "tokenAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.TokenLaunchpadInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/token_market_analytics/{chainType}/{tokenAddress}": {
            "get": {
                "description": "Retrieve market analytics for a specific token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Get token market analytics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of the token (e.g., sol, eth)",
                        "name": "chainType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address of the token",
                        "name": "tokenAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.TokenMarketAnalyticsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/token_order_book/{chainType}/{tokenAddress}": {
            "get": {
                "description": "Retrieve order book information for a specific token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Get token order book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of the token (e.g., sol, eth)",
                        "name": "chainType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address of the token",
                        "name": "tokenAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.TokenOrderBookItem"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/token_pool_info_sol/{chainType}/{tokenAddress}": {
            "get": {
                "description": "Retrieve pool information for a specific token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pool"
                ],
                "summary": "Get token pool information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of the token (e.g., sol)",
                        "name": "chainType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address of the token",
                        "name": "tokenAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.MarketInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/token_prices/{chainType}": {
            "post": {
                "description": "Retrieve prices for a list of tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Get token prices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of the token (e.g., sol, eth)",
                        "name": "chainType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Array of token addresses",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TokenPriceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.TokenPriceResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/tokens/{chainType}/{tokenAddress}/search": {
            "get": {
                "description": "Search for tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search for tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "query",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/tokens/{klineType}/{chainType}/{tokenAddress}": {
            "get": {
                "description": "Get historical kline (candlestick) data for a specific token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "on-chain-data"
                ],
                "summary": "Get token kline data",
                "parameters": [
                    {
                        "enum": [
                            "kline",
                            "mcapkline"
                        ],
                        "type": "string",
                        "description": "Kline type",
                        "name": "klineType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "sol",
                            "eth",
                            "btc"
                        ],
                        "type": "string",
                        "description": "Chain type",
                        "name": "chainType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token address",
                        "name": "tokenAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resolution (1S=1sec, 1=1min, 5=5min, 15=15min, 60=1hour, 240=4hour, 720=12hour, 1D=1day)",
                        "name": "resolution",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.KlineData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transaction/sol/get_swap_request_status": {
            "get": {
                "description": "Get swap request status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "swap"
                ],
                "summary": "Get swap request status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "swap_transaction",
                        "name": "swap_transaction",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SwapTransactionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/transaction/sol/send_swap_transaction": {
            "get": {
                "description": "Send swap request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "swap"
                ],
                "summary": "Send swap request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction",
                        "name": "transaction",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SwapTransactionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/user/message": {
            "get": {
                "description": "Get a message that needs to be signed for wallet authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Get message for wallet authentication",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Solana wallet address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/user/wallet-login": {
            "post": {
                "description": "Authenticate user with wallet signature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Wallet login",
                "parameters": [
                    {
                        "description": "Wallet authentication input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.WalletAuthService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/ws/kline/{tokenAddress}": {
            "get": {
                "description": "通过 WebSocket 实时推送 K 线数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "K线数据 WebSocket 接口",
                "parameters": [
                    {
                        "type": "string",
                        "description": "代币地址",
                        "name": "tokenAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "1S",
                            "1",
                            "5",
                            "15",
                            "60",
                            "240",
                            "720",
                            "1D"
                        ],
                        "type": "string",
                        "description": "K线周期 (1S/1/5/15/60/240/720/1D)",
                        "name": "resolution",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "切换到 WebSocket 协议",
                        "schema": {
                            "$ref": "#/definitions/response.KlineData"
                        }
                    }
                }
            }
        },
        "/{chainType}/{tradeType}/get_swap_route": {
            "get": {
                "description": "Get swap route for a specific token address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "swap"
                ],
                "summary": "Get swap route",
                "parameters": [
                    {
                        "enum": [
                            "sol",
                            "eth",
                            "btc"
                        ],
                        "type": "string",
                        "description": "Chain type",
                        "name": "chainType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "tx"
                        ],
                        "type": "string",
                        "description": "Trade type",
                        "name": "tradeType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "sol",
                            "eth",
                            "btc"
                        ],
                        "type": "string",
                        "description": "Token in chain",
                        "name": "token_in_chain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "sol",
                            "eth",
                            "btc"
                        ],
                        "type": "string",
                        "description": "Token out chain",
                        "name": "token_out_chain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "From address",
                        "name": "from_address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Slippage",
                        "name": "slippage",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token in address",
                        "name": "token_in_address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token out address",
                        "name": "token_out_address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "In amount",
                        "name": "in_amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Fee",
                        "name": "fee",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Is anti MEV",
                        "name": "is_anti_mev",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Legacy",
                        "name": "legacy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Token total supply",
                        "name": "token_total_supply",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Initial real token reserves",
                        "name": "initial_real_token_reserves",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Initial virtual sol reserves",
                        "name": "initial_virtual_sol_reserves",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Initial virtual token reserves",
                        "name": "initial_virtual_token_reserves",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SwapRouteData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httpRespone.GasFee": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/httpRespone.GasFeeResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "httpRespone.GasFeeResponse": {
            "type": "object",
            "properties": {
                "priorityFeeLevels": {
                    "$ref": "#/definitions/httpRespone.PriorityFeeLevels"
                }
            }
        },
        "httpRespone.PriorityFeeLevels": {
            "type": "object",
            "properties": {
                "high": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                },
                "medium": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                },
                "unsafeMax": {
                    "type": "number"
                },
                "veryHigh": {
                    "type": "number"
                }
            }
        },
        "request.TokenPriceRequest": {
            "type": "object",
            "required": [
                "addresses"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.Attributes": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "base_token_price_native_currency": {
                    "type": "string"
                },
                "base_token_price_quote_token": {
                    "type": "string"
                },
                "base_token_price_usd": {
                    "type": "string"
                },
                "fdv_usd": {
                    "type": "string"
                },
                "market_cap_usd": {
                    "description": "Use interface{} to handle null values"
                },
                "name": {
                    "type": "string"
                },
                "pool_created_at": {
                    "type": "string"
                },
                "price_change_percentage": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "quote_token_price_base_token": {
                    "type": "string"
                },
                "quote_token_price_native_currency": {
                    "type": "string"
                },
                "quote_token_price_usd": {
                    "type": "string"
                },
                "reserve_in_usd": {
                    "type": "string"
                },
                "token_price_usd": {
                    "type": "string"
                },
                "transactions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/response.TransactionData"
                    }
                },
                "volume_usd": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "response.DexData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.DexRelationship": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.DexData"
                }
            }
        },
        "response.IncludedData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/response.TokenAttributes"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.Instruction": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "data": {
                    "type": "string"
                },
                "programIdIndex": {
                    "type": "integer"
                }
            }
        },
        "response.KlineData": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "number"
                },
                "high": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "integer"
                },
                "volume": {
                    "type": "number"
                }
            }
        },
        "response.MarketInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "base_address": {
                    "type": "string"
                },
                "base_reserve": {
                    "type": "integer"
                },
                "base_reserve_value": {
                    "type": "number"
                },
                "base_symbol": {
                    "type": "string"
                },
                "base_vault_address": {
                    "type": "string"
                },
                "circulating_supply": {
                    "type": "number"
                },
                "creation_timestamp": {
                    "type": "integer"
                },
                "creator": {
                    "type": "string"
                },
                "initial_base_reserve": {
                    "type": "integer"
                },
                "initial_liquidity": {
                    "type": "number"
                },
                "initial_quote_reserve": {
                    "type": "integer"
                },
                "liquidity": {
                    "type": "number"
                },
                "market_cap": {
                    "type": "number"
                },
                "pool_address": {
                    "type": "string"
                },
                "quote_address": {
                    "type": "string"
                },
                "quote_reserve": {
                    "type": "integer"
                },
                "quote_reserve_value": {
                    "type": "number"
                },
                "quote_symbol": {
                    "type": "string"
                },
                "quote_vault_address": {
                    "type": "string"
                },
                "total_supply": {
                    "type": "number"
                }
            }
        },
        "response.Message": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "domain": {
                    "type": "string"
                },
                "expiration_time": {
                    "type": "string"
                },
                "issued_at": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "statement": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "response.MessageResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/response.Message"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "response.PoolData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/response.Attributes"
                },
                "id": {
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/response.Relationships"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.PoolResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.PoolData"
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IncludedData"
                    }
                }
            }
        },
        "response.Quote": {
            "type": "object",
            "properties": {
                "inAmount": {
                    "type": "string"
                },
                "inDecimals": {
                    "type": "integer"
                },
                "inputMint": {
                    "type": "string"
                },
                "otherAmountThreshold": {
                    "type": "string"
                },
                "outAmount": {
                    "type": "string"
                },
                "outDecimals": {
                    "type": "integer"
                },
                "outputMint": {
                    "type": "string"
                },
                "platformFee": {
                    "type": "integer"
                },
                "priceImpactPct": {
                    "type": "string"
                },
                "routePlan": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.RoutePlan"
                    }
                },
                "slippageBps": {
                    "type": "integer"
                },
                "swapMode": {
                    "type": "string"
                },
                "timeTaken": {
                    "type": "number"
                }
            }
        },
        "response.RawTx": {
            "type": "object",
            "properties": {
                "lastValidBlockHeight": {
                    "type": "integer"
                },
                "prioritizationFeeLamports": {
                    "type": "integer"
                },
                "recentBlockhash": {
                    "type": "string"
                },
                "swapTransaction": {
                    "type": "string"
                }
            }
        },
        "response.Relationships": {
            "type": "object",
            "properties": {
                "base_token": {
                    "$ref": "#/definitions/response.TokenRelationship"
                },
                "dex": {
                    "$ref": "#/definitions/response.DexRelationship"
                },
                "quote_token": {
                    "$ref": "#/definitions/response.TokenRelationship"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "error": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "response.RoutePlan": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "integer"
                },
                "swapInfo": {
                    "$ref": "#/definitions/response.SwapInfo"
                }
            }
        },
        "response.Signature": {
            "type": "object",
            "properties": {
                "signature": {
                    "description": "Use a map to capture numeric keys",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "response.SwapInfo": {
            "type": "object",
            "properties": {
                "ammKey": {
                    "type": "string"
                },
                "feeAmount": {
                    "type": "integer"
                },
                "feeMint": {
                    "type": "string"
                },
                "inAmount": {
                    "type": "string"
                },
                "inputMint": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "outAmount": {
                    "type": "string"
                },
                "outputMint": {
                    "type": "string"
                }
            }
        },
        "response.SwapRouteData": {
            "type": "object",
            "properties": {
                "amountInUSD": {
                    "type": "string"
                },
                "amountOutUSD": {
                    "type": "string"
                },
                "jito_order_id": {},
                "quote": {
                    "$ref": "#/definitions/response.Quote"
                },
                "raw_tx": {
                    "$ref": "#/definitions/response.RawTx"
                }
            }
        },
        "response.SwapTransactionResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "base64SwapTransaction": {
                            "type": "string"
                        },
                        "lastValidBlockHeight": {
                            "type": "integer"
                        },
                        "swapTransaction": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "$ref": "#/definitions/response.TransactionMessage"
                                },
                                "signatures": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/response.Signature"
                                    }
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.TokenAttributes": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "coingecko_coin_id": {
                    "description": "Use interface{} to handle null values"
                },
                "decimals": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "response.TokenBalance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "response.TokenData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.TokenInfoResponse": {
            "description": "Detailed information about a token",
            "type": "object",
            "properties": {
                "address": {
                    "description": "The unique address of the token",
                    "type": "string"
                },
                "biggest_pool_address": {
                    "description": "Address of the largest liquidity pool for the token",
                    "type": "string"
                },
                "circulating_supply": {
                    "description": "The amount of tokens currently in circulation",
                    "type": "integer"
                },
                "create_timestamp": {
                    "description": "The timestamp when the token was created",
                    "type": "integer"
                },
                "created_platform_type": {
                    "description": "The platform type where the token was created",
                    "type": "integer"
                },
                "creator": {
                    "description": "The address of the token's creator",
                    "type": "string"
                },
                "creator_balance_rate": {
                    "description": "The percentage of total supply held by the creator",
                    "type": "string"
                },
                "creator_token_balance": {
                    "description": "The balance of tokens held by the creator",
                    "type": "string"
                },
                "cto_flag": {
                    "description": "Security check data",
                    "type": "boolean"
                },
                "decimals": {
                    "description": "The number of decimal places the token uses",
                    "type": "integer"
                },
                "dev_native_token_amount": {
                    "description": "The amount of native tokens held by the developer",
                    "type": "integer"
                },
                "dev_token_burn_amount": {
                    "description": "The amount of tokens burned by the developer",
                    "type": "number"
                },
                "dev_token_burn_ratio": {
                    "description": "The ratio of tokens burned by the developer",
                    "type": "number"
                },
                "dexscr_ad": {
                    "description": "Advertisement status on DEX",
                    "type": "boolean"
                },
                "dexscr_update_link": {
                    "description": "Update link status on DEX",
                    "type": "boolean"
                },
                "dexscr_update_link_time": {
                    "description": "Timestamp of the last update link on DEX",
                    "type": "integer"
                },
                "freeze_authority": {
                    "description": "Indicates if the token has freezing authority",
                    "type": "boolean"
                },
                "holder_count": {
                    "description": "The number of holders of the token",
                    "type": "integer"
                },
                "is_complete": {
                    "description": "Flag indicating if the token is a common token",
                    "type": "boolean"
                },
                "liquidity": {
                    "description": "The liquidity of the token in the market",
                    "type": "number"
                },
                "logo": {
                    "description": "URL to the token's logo image",
                    "type": "string"
                },
                "market_cap": {
                    "type": "number"
                },
                "max_supply": {
                    "description": "The maximum supply of the token",
                    "type": "integer"
                },
                "mint_authority": {
                    "description": "Indicates if the token has minting authority",
                    "type": "boolean"
                },
                "name": {
                    "description": "The name of the token",
                    "type": "string"
                },
                "open_timestamp": {
                    "description": "The timestamp when the token was first opened for trading",
                    "type": "integer"
                },
                "price": {
                    "description": "The price of the token",
                    "type": "number"
                },
                "price_change": {
                    "description": "The price change of the token",
                    "type": "number"
                },
                "progress": {
                    "description": "The progress of the token",
                    "type": "number"
                },
                "rat_trader_amount_rate": {
                    "description": "The percentage of total supply held by rat traders",
                    "type": "number"
                },
                "symbol": {
                    "description": "The symbol representing the token",
                    "type": "string"
                },
                "telegram": {
                    "description": "The Telegram handle of the token",
                    "type": "string"
                },
                "token_burn_ratio": {
                    "description": "The ratio of tokens burned by the token",
                    "type": "number"
                },
                "top10_holdings": {
                    "description": "The percentage of total supply held by the top 10 holders",
                    "type": "number"
                },
                "top_10_holder_rate": {
                    "description": "The percentage of total supply held by the top 10 holders",
                    "type": "number"
                },
                "total_holders": {
                    "description": "The total number of holders of the token",
                    "type": "boolean"
                },
                "total_supply": {
                    "description": "The total supply of the token",
                    "type": "integer"
                },
                "twitter": {
                    "description": "The Twitter handle of the token",
                    "type": "string"
                },
                "twitter_change_flag": {
                    "description": "Twitter change flag",
                    "type": "boolean"
                },
                "website": {
                    "description": "The website of the token",
                    "type": "string"
                }
            }
        },
        "response.TokenLaunchpadInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "launchpad": {
                    "type": "string"
                },
                "launchpad_progress": {
                    "type": "string"
                },
                "launchpad_status": {
                    "type": "integer"
                }
            }
        },
        "response.TokenMarketAnalyticsResponse": {
            "type": "object",
            "properties": {
                "buy_count_1h": {
                    "type": "integer"
                },
                "buy_count_1m": {
                    "type": "integer"
                },
                "buy_count_24h": {
                    "type": "integer"
                },
                "buy_count_5m": {
                    "type": "integer"
                },
                "buy_volume_1h": {
                    "type": "number"
                },
                "buy_volume_1m": {
                    "type": "number"
                },
                "buy_volume_24h": {
                    "type": "number"
                },
                "buy_volume_5m": {
                    "type": "number"
                },
                "current_price": {
                    "type": "number"
                },
                "price_change_1h": {
                    "type": "number"
                },
                "price_change_1m": {
                    "type": "number"
                },
                "price_change_24h": {
                    "type": "number"
                },
                "price_change_5m": {
                    "type": "number"
                },
                "sell_count_1h": {
                    "type": "integer"
                },
                "sell_count_1m": {
                    "type": "integer"
                },
                "sell_count_24h": {
                    "type": "integer"
                },
                "sell_count_5m": {
                    "type": "integer"
                },
                "sell_volume_1h": {
                    "type": "number"
                },
                "sell_volume_1m": {
                    "type": "number"
                },
                "sell_volume_24h": {
                    "type": "number"
                },
                "sell_volume_5m": {
                    "type": "number"
                },
                "token_address": {
                    "type": "string"
                },
                "total_count_1h": {
                    "type": "integer"
                },
                "total_count_1m": {
                    "type": "integer"
                },
                "total_count_24h": {
                    "type": "integer"
                },
                "total_count_5m": {
                    "type": "integer"
                },
                "volume_1h": {
                    "type": "number"
                },
                "volume_1m": {
                    "type": "number"
                },
                "volume_24h": {
                    "type": "number"
                },
                "volume_5m": {
                    "type": "number"
                }
            }
        },
        "response.TokenOrderBookItem": {
            "description": "Single transaction record in the token order book",
            "type": "object",
            "properties": {
                "base_token_amount": {
                    "description": "The amount of base tokens in the transaction",
                    "type": "number"
                },
                "base_token_price": {
                    "description": "The price of the base token",
                    "type": "number"
                },
                "chain_type": {
                    "description": "The type of blockchain network",
                    "type": "integer"
                },
                "platform_type": {
                    "description": "The type of platform where the transaction occurred",
                    "type": "integer"
                },
                "pool_address": {
                    "description": "The address of the liquidity pool",
                    "type": "string"
                },
                "quote_token_amount": {
                    "description": "The amount of quote tokens in the transaction",
                    "type": "number"
                },
                "quote_token_price": {
                    "description": "The price of the quote token",
                    "type": "number"
                },
                "token_address": {
                    "description": "The address of the token being traded",
                    "type": "string"
                },
                "transaction_hash": {
                    "description": "The unique hash of the transaction",
                    "type": "string"
                },
                "transaction_time": {
                    "description": "The timestamp of the transaction in unix seconds",
                    "type": "integer"
                },
                "transaction_type": {
                    "description": "The type of transaction (buy/sell)",
                    "type": "integer"
                },
                "usd_amount": {
                    "description": "The transaction amount in USD",
                    "type": "number"
                },
                "user_address": {
                    "description": "The address of the user who made the transaction",
                    "type": "string"
                }
            }
        },
        "response.TokenPriceResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "response.TokenRelationship": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.TokenData"
                }
            }
        },
        "response.TransactionData": {
            "type": "object",
            "properties": {
                "buyers": {
                    "type": "integer"
                },
                "buys": {
                    "type": "integer"
                },
                "sellers": {
                    "type": "integer"
                },
                "sells": {
                    "type": "integer"
                }
            }
        },
        "response.TransactionMessage": {
            "type": "object",
            "properties": {
                "accountKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "header": {
                    "type": "object",
                    "properties": {
                        "numReadonlySignedAccounts": {
                            "type": "integer"
                        },
                        "numReadonlyUnsignedAccounts": {
                            "type": "integer"
                        },
                        "numRequiredSignatures": {
                            "type": "integer"
                        }
                    }
                },
                "indexToProgramIds": {
                    "type": "object",
                    "additionalProperties": true
                },
                "instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Instruction"
                    }
                },
                "recentBlockhash": {
                    "type": "string"
                }
            }
        },
        "service.WalletAuthService": {
            "description": "用于钱包认证和登录的服务结构体",
            "type": "object",
            "required": [
                "address",
                "signature"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "5YNmS1R9nNSCDzb5a7mMJ1dwK9uHeAAF4CmPEwKgVWr8"
                },
                "signature": {
                    "type": "string",
                    "example": "base58_encoded_signature"
                }
            }
        }
    }
}