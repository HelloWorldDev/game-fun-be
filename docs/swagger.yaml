basePath: /api/v1
definitions:
  httpRespone.GasFee:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/httpRespone.GasFeeResponse'
      message:
        type: string
    type: object
  httpRespone.GasFeeResponse:
    properties:
      priorityFeeLevels:
        $ref: '#/definitions/httpRespone.PriorityFeeLevels'
    type: object
  httpRespone.PriorityFeeLevels:
    properties:
      high:
        type: number
      low:
        type: number
      medium:
        type: number
      min:
        type: number
      unsafeMax:
        type: number
      veryHigh:
        type: number
    type: object
  request.TokenPriceRequest:
    properties:
      addresses:
        items:
          type: string
        type: array
    required:
    - addresses
    type: object
  response.Attributes:
    properties:
      address:
        type: string
      base_token_price_native_currency:
        type: string
      base_token_price_quote_token:
        type: string
      base_token_price_usd:
        type: string
      fdv_usd:
        type: string
      market_cap_usd:
        description: Use interface{} to handle null values
      name:
        type: string
      pool_created_at:
        type: string
      price_change_percentage:
        additionalProperties:
          type: string
        type: object
      quote_token_price_base_token:
        type: string
      quote_token_price_native_currency:
        type: string
      quote_token_price_usd:
        type: string
      reserve_in_usd:
        type: string
      token_price_usd:
        type: string
      transactions:
        additionalProperties:
          $ref: '#/definitions/response.TransactionData'
        type: object
      volume_usd:
        additionalProperties:
          type: string
        type: object
    type: object
  response.DexData:
    properties:
      id:
        type: string
      type:
        type: string
    type: object
  response.DexRelationship:
    properties:
      data:
        $ref: '#/definitions/response.DexData'
    type: object
  response.IncludedData:
    properties:
      attributes:
        $ref: '#/definitions/response.TokenAttributes'
      id:
        type: string
      type:
        type: string
    type: object
  response.Instruction:
    properties:
      accounts:
        items:
          type: integer
        type: array
      data:
        type: string
      programIdIndex:
        type: integer
    type: object
  response.KlineData:
    properties:
      close:
        type: number
      high:
        type: number
      low:
        type: number
      open:
        type: number
      timestamp:
        type: integer
      volume:
        type: number
    type: object
  response.MarketInfo:
    properties:
      address:
        type: string
      base_address:
        type: string
      base_reserve:
        type: integer
      base_reserve_value:
        type: number
      base_symbol:
        type: string
      base_vault_address:
        type: string
      circulating_supply:
        type: number
      creation_timestamp:
        type: integer
      creator:
        type: string
      initial_base_reserve:
        type: integer
      initial_liquidity:
        type: number
      initial_quote_reserve:
        type: integer
      liquidity:
        type: number
      market_cap:
        type: number
      pool_address:
        type: string
      quote_address:
        type: string
      quote_reserve:
        type: integer
      quote_reserve_value:
        type: number
      quote_symbol:
        type: string
      quote_vault_address:
        type: string
      total_supply:
        type: number
    type: object
  response.Message:
    properties:
      chain_id:
        type: integer
      domain:
        type: string
      expiration_time:
        type: string
      issued_at:
        type: string
      nonce:
        type: string
      statement:
        type: string
      uri:
        type: string
      version:
        type: string
    type: object
  response.MessageResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/response.Message'
      msg:
        type: string
    type: object
  response.PoolData:
    properties:
      attributes:
        $ref: '#/definitions/response.Attributes'
      id:
        type: string
      relationships:
        $ref: '#/definitions/response.Relationships'
      type:
        type: string
    type: object
  response.PoolResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.PoolData'
        type: array
      included:
        items:
          $ref: '#/definitions/response.IncludedData'
        type: array
    type: object
  response.Quote:
    properties:
      inAmount:
        type: string
      inDecimals:
        type: integer
      inputMint:
        type: string
      otherAmountThreshold:
        type: string
      outAmount:
        type: string
      outDecimals:
        type: integer
      outputMint:
        type: string
      platformFee:
        type: integer
      priceImpactPct:
        type: string
      routePlan:
        items:
          $ref: '#/definitions/response.RoutePlan'
        type: array
      slippageBps:
        type: integer
      swapMode:
        type: string
      timeTaken:
        type: number
    type: object
  response.RawTx:
    properties:
      lastValidBlockHeight:
        type: integer
      prioritizationFeeLamports:
        type: integer
      recentBlockhash:
        type: string
      swapTransaction:
        type: string
    type: object
  response.Relationships:
    properties:
      base_token:
        $ref: '#/definitions/response.TokenRelationship'
      dex:
        $ref: '#/definitions/response.DexRelationship'
      quote_token:
        $ref: '#/definitions/response.TokenRelationship'
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      msg:
        type: string
    type: object
  response.RoutePlan:
    properties:
      percent:
        type: integer
      swapInfo:
        $ref: '#/definitions/response.SwapInfo'
    type: object
  response.Signature:
    properties:
      signature:
        additionalProperties:
          type: string
        description: Use a map to capture numeric keys
        type: object
    type: object
  response.SwapInfo:
    properties:
      ammKey:
        type: string
      feeAmount:
        type: integer
      feeMint:
        type: string
      inAmount:
        type: string
      inputMint:
        type: string
      label:
        type: string
      outAmount:
        type: string
      outputMint:
        type: string
    type: object
  response.SwapRouteData:
    properties:
      amountInUSD:
        type: string
      amountOutUSD:
        type: string
      jito_order_id: {}
      quote:
        $ref: '#/definitions/response.Quote'
      raw_tx:
        $ref: '#/definitions/response.RawTx'
    type: object
  response.SwapTransactionResponse:
    properties:
      code:
        type: integer
      data:
        properties:
          base64SwapTransaction:
            type: string
          lastValidBlockHeight:
            type: integer
          swapTransaction:
            properties:
              message:
                $ref: '#/definitions/response.TransactionMessage'
              signatures:
                items:
                  $ref: '#/definitions/response.Signature'
                type: array
            type: object
        type: object
      message:
        type: string
    type: object
  response.TokenAttributes:
    properties:
      address:
        type: string
      coingecko_coin_id:
        description: Use interface{} to handle null values
      decimals:
        type: integer
      image_url:
        type: string
      name:
        type: string
      symbol:
        type: string
    type: object
  response.TokenBalance:
    properties:
      balance:
        type: string
      owner:
        type: string
      token:
        type: string
    type: object
  response.TokenData:
    properties:
      id:
        type: string
      type:
        type: string
    type: object
  response.TokenInfoResponse:
    description: Detailed information about a token
    properties:
      address:
        description: The unique address of the token
        type: string
      biggest_pool_address:
        description: Address of the largest liquidity pool for the token
        type: string
      circulating_supply:
        description: The amount of tokens currently in circulation
        type: integer
      create_timestamp:
        description: The timestamp when the token was created
        type: integer
      created_platform_type:
        description: The platform type where the token was created
        type: integer
      creator:
        description: The address of the token's creator
        type: string
      creator_balance_rate:
        description: The percentage of total supply held by the creator
        type: string
      creator_token_balance:
        description: The balance of tokens held by the creator
        type: string
      cto_flag:
        description: Security check data
        type: boolean
      decimals:
        description: The number of decimal places the token uses
        type: integer
      dev_native_token_amount:
        description: The amount of native tokens held by the developer
        type: integer
      dev_token_burn_amount:
        description: The amount of tokens burned by the developer
        type: number
      dev_token_burn_ratio:
        description: The ratio of tokens burned by the developer
        type: number
      dexscr_ad:
        description: Advertisement status on DEX
        type: boolean
      dexscr_update_link:
        description: Update link status on DEX
        type: boolean
      dexscr_update_link_time:
        description: Timestamp of the last update link on DEX
        type: integer
      freeze_authority:
        description: Indicates if the token has freezing authority
        type: boolean
      holder_count:
        description: The number of holders of the token
        type: integer
      is_complete:
        description: Flag indicating if the token is a common token
        type: boolean
      liquidity:
        description: The liquidity of the token in the market
        type: number
      logo:
        description: URL to the token's logo image
        type: string
      market_cap:
        type: number
      max_supply:
        description: The maximum supply of the token
        type: integer
      mint_authority:
        description: Indicates if the token has minting authority
        type: boolean
      name:
        description: The name of the token
        type: string
      open_timestamp:
        description: The timestamp when the token was first opened for trading
        type: integer
      price:
        description: The price of the token
        type: number
      price_change:
        description: The price change of the token
        type: number
      progress:
        description: The progress of the token
        type: number
      rat_trader_amount_rate:
        description: The percentage of total supply held by rat traders
        type: number
      symbol:
        description: The symbol representing the token
        type: string
      telegram:
        description: The Telegram handle of the token
        type: string
      token_burn_ratio:
        description: The ratio of tokens burned by the token
        type: number
      top_10_holder_rate:
        description: The percentage of total supply held by the top 10 holders
        type: number
      top10_holdings:
        description: The percentage of total supply held by the top 10 holders
        type: number
      total_holders:
        description: The total number of holders of the token
        type: boolean
      total_supply:
        description: The total supply of the token
        type: integer
      twitter:
        description: The Twitter handle of the token
        type: string
      twitter_change_flag:
        description: Twitter change flag
        type: boolean
      website:
        description: The website of the token
        type: string
    type: object
  response.TokenLaunchpadInfo:
    properties:
      address:
        type: string
      description:
        type: string
      launchpad:
        type: string
      launchpad_progress:
        type: string
      launchpad_status:
        type: integer
    type: object
  response.TokenMarketAnalyticsResponse:
    properties:
      buy_count_1h:
        type: integer
      buy_count_1m:
        type: integer
      buy_count_5m:
        type: integer
      buy_count_24h:
        type: integer
      buy_volume_1h:
        type: number
      buy_volume_1m:
        type: number
      buy_volume_5m:
        type: number
      buy_volume_24h:
        type: number
      current_price:
        type: number
      price_change_1h:
        type: number
      price_change_1m:
        type: number
      price_change_5m:
        type: number
      price_change_24h:
        type: number
      sell_count_1h:
        type: integer
      sell_count_1m:
        type: integer
      sell_count_5m:
        type: integer
      sell_count_24h:
        type: integer
      sell_volume_1h:
        type: number
      sell_volume_1m:
        type: number
      sell_volume_5m:
        type: number
      sell_volume_24h:
        type: number
      token_address:
        type: string
      total_count_1h:
        type: integer
      total_count_1m:
        type: integer
      total_count_5m:
        type: integer
      total_count_24h:
        type: integer
      volume_1h:
        type: number
      volume_1m:
        type: number
      volume_5m:
        type: number
      volume_24h:
        type: number
    type: object
  response.TokenOrderBookItem:
    description: Single transaction record in the token order book
    properties:
      base_token_amount:
        description: The amount of base tokens in the transaction
        type: number
      base_token_price:
        description: The price of the base token
        type: number
      chain_type:
        description: The type of blockchain network
        type: integer
      platform_type:
        description: The type of platform where the transaction occurred
        type: integer
      pool_address:
        description: The address of the liquidity pool
        type: string
      quote_token_amount:
        description: The amount of quote tokens in the transaction
        type: number
      quote_token_price:
        description: The price of the quote token
        type: number
      token_address:
        description: The address of the token being traded
        type: string
      transaction_hash:
        description: The unique hash of the transaction
        type: string
      transaction_time:
        description: The timestamp of the transaction in unix seconds
        type: integer
      transaction_type:
        description: The type of transaction (buy/sell)
        type: integer
      usd_amount:
        description: The transaction amount in USD
        type: number
      user_address:
        description: The address of the user who made the transaction
        type: string
    type: object
  response.TokenPriceResponse:
    properties:
      address:
        type: string
      price:
        type: number
    type: object
  response.TokenRelationship:
    properties:
      data:
        $ref: '#/definitions/response.TokenData'
    type: object
  response.TransactionData:
    properties:
      buyers:
        type: integer
      buys:
        type: integer
      sellers:
        type: integer
      sells:
        type: integer
    type: object
  response.TransactionMessage:
    properties:
      accountKeys:
        items:
          type: string
        type: array
      header:
        properties:
          numReadonlySignedAccounts:
            type: integer
          numReadonlyUnsignedAccounts:
            type: integer
          numRequiredSignatures:
            type: integer
        type: object
      indexToProgramIds:
        additionalProperties: true
        type: object
      instructions:
        items:
          $ref: '#/definitions/response.Instruction'
        type: array
      recentBlockhash:
        type: string
    type: object
  service.WalletAuthService:
    description: 用于钱包认证和登录的服务结构体
    properties:
      address:
        example: 5YNmS1R9nNSCDzb5a7mMJ1dwK9uHeAAF4CmPEwKgVWr8
        type: string
      signature:
        example: base58_encoded_signature
        type: string
    required:
    - address
    - signature
    type: object
host: 8.218.102.112:4880
info:
  contact: {}
  description: This is a sample API for demonstration purposes.
  title: My API
  version: "1.0"
paths:
  /{chainType}/{tradeType}/get_swap_route:
    get:
      consumes:
      - application/json
      description: Get swap route for a specific token address
      parameters:
      - description: Chain type
        enum:
        - sol
        - eth
        - btc
        in: path
        name: chainType
        required: true
        type: string
      - description: Trade type
        enum:
        - tx
        in: path
        name: tradeType
        required: true
        type: string
      - description: Token in chain
        enum:
        - sol
        - eth
        - btc
        in: query
        name: token_in_chain
        required: true
        type: string
      - description: Token out chain
        enum:
        - sol
        - eth
        - btc
        in: query
        name: token_out_chain
        required: true
        type: string
      - description: From address
        in: query
        name: from_address
        required: true
        type: string
      - description: Slippage
        in: query
        name: slippage
        required: true
        type: number
      - description: Token in address
        in: query
        name: token_in_address
        required: true
        type: string
      - description: Token out address
        in: query
        name: token_out_address
        required: true
        type: string
      - description: In amount
        in: query
        name: in_amount
        required: true
        type: string
      - description: Fee
        in: query
        name: fee
        required: true
        type: number
      - description: Is anti MEV
        in: query
        name: is_anti_mev
        type: boolean
      - description: Legacy
        in: query
        name: legacy
        type: boolean
      - description: Token total supply
        in: query
        name: token_total_supply
        required: true
        type: integer
      - description: Initial real token reserves
        in: query
        name: initial_real_token_reserves
        required: true
        type: integer
      - description: Initial virtual sol reserves
        in: query
        name: initial_virtual_sol_reserves
        required: true
        type: integer
      - description: Initial virtual token reserves
        in: query
        name: initial_virtual_token_reserves
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SwapRouteData'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get swap route
      tags:
      - swap
  /api/v1/user/me:
    get:
      consumes:
      - application/json
      description: Get details of the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get user details
      tags:
      - user
  /chains/:chainType/gas_fee:
    get:
      consumes:
      - application/json
      description: Get the current gas fee for Solana blockchain
      parameters:
      - description: Type of the token (e.g., sol, eth)
        in: path
        name: chainType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/httpRespone.GasFee'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Solana gas fee
      tags:
      - on-chain-data
  /chains/:chainType/sol_price:
    get:
      consumes:
      - application/json
      description: Get the current real-time price for Solana
      parameters:
      - description: Type of the token (e.g., sol, eth)
        in: path
        name: chainType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: number
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Solana real-time price
      tags:
      - on-chain-data
  /pool_info/{address}:
    get:
      consumes:
      - application/json
      description: Retrieve pool information for a specific token
      parameters:
      - description: Address of the token
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PoolResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get pool info
      tags:
      - pool
  /rank/sol/new_pairs:
    get:
      consumes:
      - application/json
      description: Get the dump rank for SOL tokens
      parameters:
      - description: Time range
        enum:
        - 1m
        - 5m
        - 1h
        - 6h
        - 24h
        in: query
        name: time
        required: true
        type: string
      - description: Limit of results
        in: query
        minimum: 1
        name: limit
        required: true
        type: integer
      - description: Order by field
        enum:
        - progress
        - created_timestamp
        - price_change_percent5m
        - price_change_percent1h
        - liquidity
        - creator_balance
        - holder_count
        - swaps_1h
        - volume_1h
        - reply_count
        - usd_market_cap
        - last_trade_timestamp
        - koth_duration
        - time_since_koth
        - market_cap_1m
        - market_cap_5m
        in: query
        name: orderby
        type: string
      - description: Sort direction
        enum:
        - asc
        - desc
        in: query
        name: direction
        type: string
      - description: Filter for completed projects
        in: query
        name: completed
        type: boolean
      - collectionFormat: csv
        description: Additional filters
        in: query
        items:
          type: string
        name: filters[]
        type: array
      - description: Minimum creation time
        in: query
        name: min_created
        type: string
      - description: Maximum creation time
        in: query
        name: max_created
        type: string
      - description: Minimum holder count
        in: query
        name: min_holder_count
        type: integer
      - description: Maximum holder count
        in: query
        name: max_holder_count
        type: integer
      - description: Minimum swaps
        in: query
        name: min_swaps
        type: integer
      - description: Maximum swaps
        in: query
        name: max_swaps
        type: integer
      - description: Minimum market cap
        in: query
        name: min_marketcap
        type: number
      - description: Maximum market cap
        in: query
        name: max_marketcap
        type: number
      - description: Minimum volume
        in: query
        name: min_volume
        type: number
      - description: Maximum volume
        in: query
        name: max_volume
        type: number
      - description: Minimum reply count
        in: query
        name: min_reply
        type: integer
      - description: Time to reach 1/2 crown
        in: query
        name: koth_duration
        type: string
      - description: Time to reach 2/2 rocket
        in: query
        name: time_since_koth
        type: string
      - description: Minimum initial liquidity
        in: query
        name: min_init_liquidity
        type: number
      - description: Maximum initial liquidity
        in: query
        name: max_init_liquidity
        type: number
      - description: Minimum quote USD
        in: query
        name: min_quote_usd
        type: number
      - description: Maximum quote USD
        in: query
        name: max_quote_usd
        type: number
      - description: Minimum liquidity
        in: query
        name: min_liquidity
        type: number
      - description: Maximum liquidity
        in: query
        name: max_liquidity
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get SOL dump rank
      tags:
      - pump
  /rank/sol/pump:
    get:
      consumes:
      - application/json
      description: Get the pump rank for SOL tokens
      parameters:
      - description: Time range
        enum:
        - 1m
        - 5m
        - 1h
        - 6h
        - 24h
        in: query
        name: time
        required: true
        type: string
      - description: Limit of results
        in: query
        minimum: 1
        name: limit
        required: true
        type: integer
      - description: Order by field
        enum:
        - progress
        - created_timestamp
        - creator_balance
        - holder_count
        - swaps_1h
        - volume_1h
        - reply_count
        - usd_market_cap
        - last_trade_timestamp
        - koth_duration
        - time_since_koth
        - market_cap_1m
        - market_cap_5m
        in: query
        name: orderby
        type: string
      - description: Sort direction
        enum:
        - asc
        - desc
        in: query
        name: direction
        type: string
      - description: Filter for new creations
        in: query
        name: new_creation
        type: boolean
      - description: Filter for completing projects
        in: query
        name: completing
        type: boolean
      - description: Filter for projects about to pump
        in: query
        name: pump
        type: boolean
      - description: Filter for soaring projects
        in: query
        name: soaring
        type: boolean
      - collectionFormat: csv
        description: Additional filters
        in: query
        items:
          type: string
        name: filters[]
        type: array
      - description: Minimum creation time
        in: query
        name: min_created
        type: string
      - description: Maximum creation time
        in: query
        name: max_created
        type: string
      - description: Minimum holder count
        in: query
        name: min_holder_count
        type: integer
      - description: Maximum holder count
        in: query
        name: max_holder_count
        type: integer
      - description: Minimum swaps
        in: query
        name: min_swaps
        type: integer
      - description: Maximum swaps
        in: query
        name: max_swaps
        type: integer
      - description: Minimum market cap
        in: query
        name: min_marketcap
        type: number
      - description: Maximum market cap
        in: query
        name: max_marketcap
        type: number
      - description: Minimum volume
        in: query
        name: min_volume
        type: number
      - description: Maximum volume
        in: query
        name: max_volume
        type: number
      - description: Minimum reply count
        in: query
        name: min_reply
        type: integer
      - description: Time to reach 1/2 crown
        in: query
        name: koth_duration
        type: string
      - description: Time to reach 2/2 rocket
        in: query
        name: time_since_koth
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get SOL pump rank
      tags:
      - pump
  /token_balance/{chainType}/{owner}/{token}:
    get:
      consumes:
      - application/json
      description: Get the balance of a token for a given owner
      parameters:
      - description: Type of the token (e.g., sol, eth)
        in: path
        name: chainType
        required: true
        type: string
      - description: Owner of the token
        in: path
        name: owner
        required: true
        type: string
      - description: Token address
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TokenBalance'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get token balance
      tags:
      - on-chain-data
  /token_info/{chainType}/{tokenAddress}:
    get:
      consumes:
      - application/json
      description: Retrieve detailed information for a specific token
      parameters:
      - description: Type of the token (e.g., sol, eth)
        in: path
        name: chainType
        required: true
        type: string
      - description: Address of the token
        in: path
        name: tokenAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Detailed token information
          schema:
            $ref: '#/definitions/response.TokenInfoResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TokenInfoResponse'
              type: object
      summary: Get token information
      tags:
      - token
  /token_launchpad_info/{chainType}/{tokenAddress}:
    get:
      consumes:
      - application/json
      description: Retrieve detailed information for a specific token
      parameters:
      - description: Type of the token (e.g., sol, eth)
        in: path
        name: chainType
        required: true
        type: string
      - description: Address of the token
        in: path
        name: tokenAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TokenLaunchpadInfo'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get token launchpad info
      tags:
      - token
  /token_market_analytics/{chainType}/{tokenAddress}:
    get:
      consumes:
      - application/json
      description: Retrieve market analytics for a specific token
      parameters:
      - description: Type of the token (e.g., sol, eth)
        in: path
        name: chainType
        required: true
        type: string
      - description: Address of the token
        in: path
        name: tokenAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TokenMarketAnalyticsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get token market analytics
      tags:
      - token
  /token_order_book/{chainType}/{tokenAddress}:
    get:
      consumes:
      - application/json
      description: Retrieve order book information for a specific token
      parameters:
      - description: Type of the token (e.g., sol, eth)
        in: path
        name: chainType
        required: true
        type: string
      - description: Address of the token
        in: path
        name: tokenAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TokenOrderBookItem'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get token order book
      tags:
      - token
  /token_pool_info_sol/{chainType}/{tokenAddress}:
    get:
      consumes:
      - application/json
      description: Retrieve pool information for a specific token
      parameters:
      - description: Type of the token (e.g., sol)
        in: path
        name: chainType
        required: true
        type: string
      - description: Address of the token
        in: path
        name: tokenAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.MarketInfo'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get token pool information
      tags:
      - pool
  /token_prices/{chainType}:
    post:
      consumes:
      - application/json
      description: Retrieve prices for a list of tokens
      parameters:
      - description: Type of the token (e.g., sol, eth)
        in: path
        name: chainType
        required: true
        type: string
      - description: Array of token addresses
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.TokenPriceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.TokenPriceResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get token prices
      tags:
      - token
  /tokens/{chainType}/{tokenAddress}/search:
    get:
      consumes:
      - application/json
      description: Search for tokens
      parameters:
      - description: Query
        in: path
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Search for tokens
      tags:
      - search
  /tokens/{klineType}/{chainType}/{tokenAddress}:
    get:
      consumes:
      - application/json
      description: Get historical kline (candlestick) data for a specific token
      parameters:
      - description: Kline type
        enum:
        - kline
        - mcapkline
        in: path
        name: klineType
        required: true
        type: string
      - description: Chain type
        enum:
        - sol
        - eth
        - btc
        in: path
        name: chainType
        required: true
        type: string
      - description: Token address
        in: path
        name: tokenAddress
        required: true
        type: string
      - description: Resolution (1S=1sec, 1=1min, 5=5min, 15=15min, 60=1hour, 240=4hour,
          720=12hour, 1D=1day)
        in: query
        name: resolution
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.KlineData'
                  type: array
              type: object
        "400":
          description: Invalid parameters
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get token kline data
      tags:
      - on-chain-data
  /transaction/sol/get_swap_request_status:
    get:
      consumes:
      - application/json
      description: Get swap request status
      parameters:
      - description: swap_transaction
        in: path
        name: swap_transaction
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SwapTransactionResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get swap request status
      tags:
      - swap
  /transaction/sol/send_swap_transaction:
    get:
      consumes:
      - application/json
      description: Send swap request
      parameters:
      - description: transaction
        in: path
        name: transaction
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SwapTransactionResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send swap request
      tags:
      - swap
  /user/message:
    get:
      consumes:
      - application/json
      description: Get a message that needs to be signed for wallet authentication
      parameters:
      - description: Solana wallet address
        in: query
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get message for wallet authentication
      tags:
      - authentication
  /user/wallet-login:
    post:
      consumes:
      - application/json
      description: Authenticate user with wallet signature
      parameters:
      - description: Wallet authentication input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/service.WalletAuthService'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Wallet login
      tags:
      - authentication
  /ws/kline/{tokenAddress}:
    get:
      consumes:
      - application/json
      description: 通过 WebSocket 实时推送 K 线数据
      parameters:
      - description: 代币地址
        in: path
        name: tokenAddress
        required: true
        type: string
      - description: K线周期 (1S/1/5/15/60/240/720/1D)
        enum:
        - 1S
        - "1"
        - "5"
        - "15"
        - "60"
        - "240"
        - "720"
        - 1D
        in: query
        name: resolution
        required: true
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: 切换到 WebSocket 协议
          schema:
            $ref: '#/definitions/response.KlineData'
      summary: K线数据 WebSocket 接口
      tags:
      - WebSocket
swagger: "2.0"
