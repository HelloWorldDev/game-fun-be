basePath: /api/v1
definitions:
  request.LoginRequest:
    description: 用户登录时提交的请求参数
    properties:
      address:
        description: 用户钱包地址
        example: F59CSoJEmjDFQWZMjSjjvu6q7xV31p9rPzRynwrE71yk
        type: string
      comment_id:
        description: 评论ID（可选）
        example: ""
        type: string
      invite_code:
        description: 邀请码（可选）
        example: INVITE123
        type: string
      message:
        description: 登录消息
        example: "Sign in to the super.exchange\r\n\r\nTimestamp: 1740885327"
        type: string
      post_id:
        description: 帖子ID（可选）
        example: ""
        type: string
      signature:
        description: 签名信息
        example: Pli28P7PHx6Mzh+RwRTcqtCSuNs2qlncAqC4tK9PFN/CLnvZ2Gm8koqvkLPEZNoiVJOX71hCBaQV9NUKVX8KDg==
        type: string
      timestamp:
        description: 时间戳
        example: "1740885327"
        type: string
    type: object
  response.GetTickerResponse:
    description: Ticker 的具体数据
    properties:
      market:
        allOf:
        - $ref: '#/definitions/response.Market'
        description: 市场信息
      market_metadata:
        allOf:
        - $ref: '#/definitions/response.MarketMetadata'
        description: 市场元数据
      market_ticker:
        allOf:
        - $ref: '#/definitions/response.MarketTicker'
        description: 市场行情
    type: object
  response.KlineData:
    properties:
      close:
        type: number
      high:
        type: number
      low:
        type: number
      open:
        type: number
      timestamp:
        type: integer
      volume:
        type: number
    type: object
  response.LoginResponse:
    description: 登录成功后返回的具体数据
    properties:
      invite_code:
        description: 邀请码
        example: ""
        type: string
      token:
        description: 登录令牌
        example: _vetZFMHLOlPWer8_uTrqe5_7gGGNPi-fvD--pomTdSd2kn3po2uBujC4o7raUiNHPpKJaS_BR3jmgOEdaAEFA==
        type: string
      user:
        allOf:
        - $ref: '#/definitions/response.UserInfo'
        description: 用户信息
    type: object
  response.Market:
    description: 市场的基本信息
    properties:
      create_timestamp:
        description: 创建时间戳
        example: 1740033455
        type: integer
      creator:
        description: 创建者地址
        example: 3P3PMv28AM7SvNkGmAdHCusPwahSB9QG9z5o4gTvmNBX
        type: string
      holders:
        description: 持有者数量
        example: 4204
        type: integer
      market:
        description: 市场地址
        example: B3o198GX45DZ9HeJZ56wuruyWWCfGVBSn5qC71q5AHZz
        type: string
      market_id:
        description: 市场ID
        example: 1
        type: integer
      native_vault:
        description: 原生代币金库地址
        example: 98J2RACW3wk8u36k1cPmDenzHdPjhcd5qXsm5g471kdh
        type: string
      price:
        description: 当前价格
        example: "0.000050417320729"
        type: string
      token_mint:
        description: 代币铸造地址
        example: suprkbfvwpFZXzWaoKjTzGkW1nkvvwK9n2E6g1zyLFo
        type: string
      token_name:
        description: 代币名称
        example: §uper Exchange
        type: string
      token_symbol:
        description: 代币符号
        example: SUPER
        type: string
      token_vault:
        description: 代币金库地址
        example: 9SQy9T4pzadupDcWdYYgFmUgXLVydfQwgKZEbzeACNAQ
        type: string
      uri:
        description: URI
        example: https://static.super.exchange/m/official/super.json
        type: string
    type: object
  response.MarketMetadata:
    description: 市场的元数据信息
    properties:
      banner:
        description: 横幅图片
        example: ""
        type: string
      description:
        description: 描述
        example: ""
        type: string
      image_url:
        description: 图片URL
        example: https://static.super.exchange/i/official/super.png
        type: string
      rules:
        description: 规则
        example: ""
        type: string
      sort:
        description: 排序
        example: 0
        type: integer
      telegram:
        description: Telegram链接
        example: https://t.me/SuperExchangeCommunity
        type: string
      twitter:
        description: Twitter链接
        example: https://x.com/_superexchange
        type: string
      website:
        description: 网站链接
        example: https://super.exchange
        type: string
    type: object
  response.MarketTicker:
    description: 市场的行情数据
    properties:
      buy_native_volume_1h:
        description: 1小时买入原生代币交易量
        example: "19.071274881"
        type: string
      buy_native_volume_5m:
        description: 5分钟买入原生代币交易量
        example: "3.138140370"
        type: string
      buy_native_volume_24h:
        description: 24小时买入原生代币交易量
        example: "703.884254256"
        type: string
      buy_token_volume_1h:
        description: 1小时买入代币交易量
        example: "379231.972430"
        type: string
      buy_token_volume_5m:
        description: 5分钟买入代币交易量
        example: "62269.324250"
        type: string
      buy_token_volume_24h:
        description: 24小时买入代币交易量
        example: "15435782.918031"
        type: string
      buy_tx_count_1h:
        description: 1小时买入交易次数
        example: 271
        type: integer
      buy_tx_count_5m:
        description: 5分钟买入交易次数
        example: 25
        type: integer
      buy_tx_count_24h:
        description: 24小时买入交易次数
        example: 7566
        type: integer
      high_1h:
        description: 1小时最高价
        example: "0.000050417320729"
        type: string
      high_5m:
        description: 5分钟最高价
        example: "0.000050417320729"
        type: string
      high_24h:
        description: 24小时最高价
        example: "0.000050417320729"
        type: string
      last_swap_at:
        description: 最后交易时间戳
        example: 1740887399
        type: integer
      low_1h:
        description: 1小时最低价
        example: "0.000050161350930"
        type: string
      low_5m:
        description: 5分钟最低价
        example: "0.000050375183502"
        type: string
      low_24h:
        description: 24小时最低价
        example: "0.000041158184158"
        type: string
      market_cap:
        description: 市值
        example: "50417.320729000000000"
        type: string
      native_volume_1h:
        description: 1小时原生代币交易量
        example: "19.071274881"
        type: string
      native_volume_5m:
        description: 5分钟原生代币交易量
        example: "3.138140370"
        type: string
      native_volume_24h:
        description: 24小时原生代币交易量
        example: "704.558749824"
        type: string
      price_change_1h:
        description: 1小时价格变化
        example: "0.005103"
        type: string
      price_change_5m:
        description: 5分钟价格变化
        example: "0.000836"
        type: string
      price_change_24h:
        description: 24小时价格变化
        example: "0.224965"
        type: string
      rank:
        description: 排名
        example: 1
        type: integer
      token_volume_1h:
        description: 1小时代币交易量
        example: "379231.972430"
        type: string
      token_volume_5m:
        description: 5分钟代币交易量
        example: "62269.324250"
        type: string
      token_volume_24h:
        description: 24小时代币交易量
        example: "15450301.872331"
        type: string
      tx_count_1h:
        description: 1小时交易次数
        example: 271
        type: integer
      tx_count_5m:
        description: 5分钟交易次数
        example: 25
        type: integer
      tx_count_24h:
        description: 24小时交易次数
        example: 7590
        type: integer
    type: object
  response.Moderator:
    description: 持有者的管理员信息
    properties:
      banned:
        description: 是否被封禁
        example: false
        type: boolean
      banned_mod_id:
        description: 被封禁的 Moderator ID
        example: 0
        type: integer
      status:
        description: 当前状态
        example: NORMAL
        type: string
    type: object
  response.MyInfoResponse:
    description: 包含用户基本信息、社交统计、邀请码等详细信息。
    properties:
      fan_count:
        description: 关注数量
        type: integer
      follow_status:
        description: 关注状态
        type: string
      follower_count:
        description: 粉丝数量
        type: integer
      has_bound:
        description: 是否已绑定
        type: boolean
      invite_code:
        description: 邀请码
        type: string
      mention_count:
        description: 提及数量
        type: integer
      user:
        allOf:
        - $ref: '#/definitions/response.UserInfo'
        description: 用户基本信息
      vote_count:
        description: 投票数量
        type: integer
    type: object
  response.PayerProfile:
    properties:
      avatar:
        description: 用户头像
        type: string
      nickname:
        description: 用户昵称
        type: string
      user_id:
        description: 用户 ID
        type: string
      username:
        description: 用户名
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      msg:
        type: string
    type: object
  response.SwapHistoriesResponse:
    properties:
      has_more:
        description: 是否还有更多数据
        type: boolean
      transaction_histories:
        description: 交易历史记录列表
        items:
          $ref: '#/definitions/response.TransactionHistory'
        type: array
    type: object
  response.TickerItem:
    description: 单个市场的详细信息
    properties:
      market:
        allOf:
        - $ref: '#/definitions/response.Market'
        description: 市场信息
      market_metadata:
        allOf:
        - $ref: '#/definitions/response.MarketMetadata'
        description: 市场元数据
      market_ticker:
        allOf:
        - $ref: '#/definitions/response.MarketTicker'
        description: 市场行情
    type: object
  response.TickersResponse:
    description: 市场行情的具体数据
    properties:
      cursor:
        description: 分页游标
        example: NTA0MTcuMzIwNzI5MDAwMDAwMDAwOjE=
        type: string
      has_more:
        description: 是否有更多数据
        example: true
        type: boolean
      list:
        description: 市场列表
        items:
          $ref: '#/definitions/response.TickerItem'
        type: array
    type: object
  response.TokenDistributionResponse:
    description: 代币持有者数据
    properties:
      token_holders:
        description: 代币持有者列表
        items:
          $ref: '#/definitions/response.TokenHolder'
        type: array
    type: object
  response.TokenHolder:
    description: 代币持有者详情
    properties:
      account:
        description: 持有者钱包地址
        example: 669VYcBRq51iQzFiPTQcsW2CsvLfHM9AwVmaoM1mAAR7
        type: string
      is_associated_bonding_curve:
        description: 是否与 Bonding Curve 关联
        example: false
        type: boolean
      is_black_hole:
        description: 是否为黑洞地址
        example: false
        type: boolean
      is_community_vault:
        description: 是否为社区金库
        example: false
        type: boolean
      moderator:
        allOf:
        - $ref: '#/definitions/response.Moderator'
        description: 持有者的管理员信息
      percentage:
        description: 持有代币的百分比
        example: "100.000000"
        type: string
      user_profile:
        description: 用户资料（可能为空）
    type: object
  response.TransactionHistory:
    properties:
      block_time:
        description: 区块时间
        type: string
      fee:
        description: 手续费
        type: string
      id:
        description: 交易 ID
        type: integer
      index:
        description: 交易索引
        type: integer
      is_buy:
        description: 是否为买入
        type: boolean
      market_id:
        description: 市场 ID
        type: integer
      native_amount:
        description: 原生代币数量
        type: string
      payer:
        description: 支付方地址
        type: string
      payer_profile:
        allOf:
        - $ref: '#/definitions/response.PayerProfile'
        description: 支付方信息
      recipient:
        description: 接收方地址
        type: string
      signature:
        description: 交易签名
        type: string
      slot:
        description: 区块槽位
        type: integer
      token_amount:
        description: 代币数量
        type: string
      total_native_amount:
        description: 总原生代币数量
        type: string
    type: object
  response.UserInfo:
    description: 包含用户 ID、地址、昵称、头像和描述等信息。
    properties:
      address:
        description: 用户地址
        type: string
      avatar:
        description: 用户头像
        type: string
      description:
        description: 用户描述
        type: string
      nickname:
        description: 用户昵称
        type: string
      user_id:
        description: 用户 ID
        type: string
    type: object
host: 8.218.102.112:4880
info:
  contact: {}
  description: This is a sample API for demonstration purposes.
  title: My API
  version: "1.0"
paths:
  /health:
    get:
      description: Check if the service is healthy
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Health check endpoint
      tags:
      - system
  /tickers:
    get:
      consumes:
      - application/json
      description: 根据排序、分页和搜索条件获取市场行情数据
      parameters:
      - description: 排序字段，支持以下值：MARKET_CAP, PRICE_CHANGE_5M, PRICE_CHANGE_1H, PRICE_CHANGE_24H,
          NATIVE_VOLUME_1H, NATIVE_VOLUME_24H, TX_COUNT_24H, HOLDERS, INITIALIZE_AT,
          Links
        enum:
        - MARKET_CAP
        - PRICE_CHANGE_5M
        - PRICE_CHANGE_1H
        - PRICE_CHANGE_24H
        - NATIVE_VOLUME_1H
        - NATIVE_VOLUME_24H
        - TX_COUNT_24H
        - HOLDERS
        - INITIALIZE_AT
        - Links
        example: '"INITIALIZE_AT"'
        in: query
        name: sorted_by
        type: string
      - description: 排序方向，支持以下值：DESC, ASC
        enum:
        - DESC
        - ASC
        example: '"DESC"'
        in: query
        name: sort_direction
        type: string
      - description: 分页游标，用于分页查询
        example: '""'
        in: query
        name: page_cursor
        type: string
      - description: 每页返回的数据条数
        example: 50
        in: query
        name: limit
        type: integer
      - description: 搜索关键字，用于筛选数据
        example: '""'
        in: query
        name: search
        type: string
      - description: 新交易对的时间分辨率，例如 1D（1 天）
        enum:
        - 1D
        - 1H
        - 1M
        example: '"1D"'
        in: query
        name: new_pairs_resolution
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回市场行情数据
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TickersResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取市场行情数据
      tags:
      - 市场行情
  /tickers/{tickers_id}/distribution:
    get:
      consumes:
      - application/json
      description: 根据 Ticker ID 获取代币持有者的分布信息
      parameters:
      - description: Ticker ID
        example: '"SUPER"'
        in: path
        name: tickers_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回代币分布信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TokenDistributionResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取指定 Ticker 的代币分布信息
      tags:
      - 市场行情
  /tickers/{token_symbol}:
    get:
      consumes:
      - application/json
      description: 根据 token_symbol 获取 Ticker 的详细信息
      parameters:
      - description: 代币符号
        enum:
        - SUPER
        - BTC
        - ETH
        - USDT
        - BNB
        example: '"SUPER"'
        in: path
        name: token_symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回 Ticker 详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.GetTickerResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取 Ticker 详情
      tags:
      - 市场行情
  /tickers/swap_histories/{tickers_id}:
    get:
      consumes:
      - application/json
      description: 根据 Ticker ID 获取交易历史记录
      parameters:
      - description: Ticker ID
        example: '"SUPER"'
        in: path
        name: tickers_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回交易历史记录
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SwapHistoriesResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取指定 Ticker 的交易历史记录
      tags:
      - 市场行情
  /tokens/{klineType}/{chainType}/{tokenAddress}:
    get:
      consumes:
      - application/json
      description: Get historical kline (candlestick) data for a specific token
      parameters:
      - description: Kline type
        enum:
        - kline
        - mcapkline
        in: path
        name: klineType
        required: true
        type: string
      - description: Chain type
        enum:
        - sol
        - eth
        - btc
        in: path
        name: chainType
        required: true
        type: string
      - description: Token address
        in: path
        name: tokenAddress
        required: true
        type: string
      - description: Resolution (1S=1sec, 1=1min, 5=5min, 15=15min, 60=1hour, 240=4hour,
          720=12hour, 1D=1day)
        in: query
        name: resolution
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.KlineData'
                  type: array
              type: object
        "400":
          description: Invalid parameters
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get token kline data
      tags:
      - on-chain-data
  /users/login:
    post:
      consumes:
      - application/json
      description: 通过钱包地址和签名进行登录
      parameters:
      - description: 登录请求参数
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户钱包登录
      tags:
      - 用户
  /users/my_info:
    get:
      consumes:
      - application/json
      description: 根据 JWT Token 获取当前用户的详细信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.MyInfoResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户信息
      tags:
      - 用户
  /ws/kline/{tokenAddress}:
    get:
      consumes:
      - application/json
      description: |-
        通过 WebSocket 实时推送 K 线数据。连接成功后，服务器将每秒推送最新的K线数据。
        连接格式: ws://host/ws/kline/{tokenAddress}?resolution={resolution}
        示例: ws://localhost:8080/ws/kline/0x1234...?resolution=1S
      parameters:
      - description: 代币地址
        example: 0x1234567890abcdef1234567890abcdef12345678
        in: path
        name: tokenAddress
        required: true
        type: string
      - description: K线周期
        enum:
        - 1S
        - "1"
        - "5"
        - "15"
        - "60"
        - "240"
        - "720"
        - 1D
        example: 1S
        in: query
        name: resolution
        required: true
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: WebSocket连接成功后的推送数据格式
          schema:
            allOf:
            - $ref: '#/definitions/response.KlineData'
            - properties:
                close:
                  type: string
                high:
                  type: string
                low:
                  type: string
                open:
                  type: string
                timestamp:
                  type: integer
                volume:
                  type: string
              type: object
      summary: K线数据 WebSocket 接口
      tags:
      - WebSocket
swagger: "2.0"
